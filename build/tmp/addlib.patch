Author: ciminus <ci.minus@protonmail.com>
Origin: https://github.com/ciminus


--- /dev/null
+++ b/libciplusprivate/Makefile
@@ -0,0 +1,54 @@
+### Prefix
+PREFIX = /usr/local
+
+# Use package data if installed...otherwise assume we're under the VDR source directory:
+PKGCFG = $(if $(VDRDIR),$(shell pkg-config --variable=$(1) $(VDRDIR)/vdr.pc),$(shell PKG_CONFIG_PATH="$$PKG_CONFIG_PATH:../../../.." pkg-config --variable=$(1) vdr))
+LIBDIR = $(call PKGCFG,libdir)
+
+#ifndef $(LIBDIR)
+#LIBDIR = $(PREFIX)/lib
+#endif
+
+### Lib name
+LIBNAME = libciplusprivate.so
+
+### Compiler flags:
+
+CC       ?= gcc
+CFLAGS   ?= -g -O3 -Wall -fPIC
+LDFLAGS= -shared
+
+### Includes
+
+INCLUDES += $(shell pkg-config --cflags openssl)
+LIBS += $(shell pkg-config --libs openssl)
+
+### The source files (any found c/cpp file)
+SRC_C = $(wildcard *.c)
+SRCS = $(SRC_C)
+
+### The object files (derived from source files)
+OBJS_C = $(SRC_C:%.c=%.o)
+OBJS = $(OBJS_C)
+
+# Implicit rules:
+
+%.o: %.c
+	$(CC) $(CFLAGS) -c $(INCLUDES) -o $@ $<
+
+all: $(LIBNAME)
+
+clean:
+	rm -f $(OBJS) $(LIBNAME)
+
+install:
+	install -D $(LIBNAME) $(DESTDIR)$(LIBDIR)/$(LIBNAME)
+
+uninstall:
+	rm -f $(LIBDIR)/$(LIBNAME)
+	
+
+$(LIBNAME): $(OBJS)
+	$(CC) $(CFLAGS) $(LDFLAGS) $(OBJS) $(LIBS) -o $(LIBNAME) 
+	strip --strip-all --discard-all $(LIBNAME)
+
--- /dev/null
+++ b/libciplusprivate/pciplus.c
@@ -0,0 +1,396 @@
+#include "pciplus.h"
+#include <openssl/aes.h>
+
+const uint8_t rootCert[] = {
+	0x30, 0x82, 0x03, 0xf2, 0x30, 0x82, 0x02, 0xda, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x0f, 0x00, 
+	0xc2, 0x5b, 0x00, 0x00, 0x00, 0x2c, 0xf2, 0x1b, 0xd8, 0x8b, 0x83, 0x19, 0x8e, 0x78, 0x30, 0x0d, 
+	0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x0a, 0x30, 0x00, 0x30, 0x81, 0x91, 
+	0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x55, 0x4b, 0x31, 0x0f, 0x30, 
+	0x0d, 0x06, 0x03, 0x55, 0x04, 0x08, 0x13, 0x06, 0x4c, 0x6f, 0x6e, 0x64, 0x6f, 0x6e, 0x31, 0x0f, 
+	0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x07, 0x13, 0x06, 0x4c, 0x6f, 0x6e, 0x64, 0x6f, 0x6e, 0x31, 
+	0x14, 0x30, 0x12, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x13, 0x0b, 0x43, 0x49, 0x20, 0x50, 0x6c, 0x75, 
+	0x73, 0x20, 0x4c, 0x4c, 0x50, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x13, 0x06, 
+	0x45, 0x75, 0x72, 0x6f, 0x70, 0x65, 0x31, 0x13, 0x30, 0x11, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x13, 
+	0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x24, 0x30, 0x22, 0x06, 
+	0x03, 0x55, 0x04, 0x03, 0x13, 0x1b, 0x43, 0x49, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x52, 0x6f, 
+	0x6f, 0x74, 0x20, 0x43, 0x41, 0x20, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 
+	0x65, 0x30, 0x1e, 0x17, 0x0d, 0x30, 0x38, 0x31, 0x31, 0x32, 0x36, 0x31, 0x33, 0x31, 0x39, 0x34, 
+	0x35, 0x5a, 0x17, 0x0d, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 
+	0x5a, 0x30, 0x81, 0x91, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x55, 
+	0x4b, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x08, 0x13, 0x06, 0x4c, 0x6f, 0x6e, 0x64, 
+	0x6f, 0x6e, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x07, 0x13, 0x06, 0x4c, 0x6f, 0x6e, 
+	0x64, 0x6f, 0x6e, 0x31, 0x14, 0x30, 0x12, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x13, 0x0b, 0x43, 0x49, 
+	0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x4c, 0x4c, 0x50, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 
+	0x04, 0x0b, 0x13, 0x06, 0x45, 0x75, 0x72, 0x6f, 0x70, 0x65, 0x31, 0x13, 0x30, 0x11, 0x06, 0x03, 
+	0x55, 0x04, 0x0b, 0x13, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x31, 
+	0x24, 0x30, 0x22, 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x1b, 0x43, 0x49, 0x20, 0x50, 0x6c, 0x75, 
+	0x73, 0x20, 0x52, 0x6f, 0x6f, 0x74, 0x20, 0x43, 0x41, 0x20, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 
+	0x69, 0x63, 0x61, 0x74, 0x65, 0x30, 0x82, 0x01, 0x22, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 
+	0x86, 0xf7, 0x0d, 0x01, 0x01, 0x01, 0x05, 0x00, 0x03, 0x82, 0x01, 0x0f, 0x00, 0x30, 0x82, 0x01, 
+	0x0a, 0x02, 0x82, 0x01, 0x01, 0x00, 0xa8, 0xd0, 0x5f, 0x2b, 0x39, 0x9d, 0x93, 0xf3, 0x2a, 0xc8, 
+	0x6e, 0xe8, 0x26, 0x3a, 0xb0, 0x16, 0x48, 0xff, 0x6f, 0xbb, 0x70, 0x2e, 0xff, 0xef, 0x12, 0xbc, 
+	0xf9, 0xd3, 0x29, 0x6a, 0x34, 0xf8, 0xd2, 0xa2, 0x4b, 0x57, 0x39, 0x90, 0x71, 0xec, 0x33, 0x55, 
+	0x77, 0x4a, 0x49, 0x7c, 0x95, 0x9a, 0x70, 0xe6, 0x6f, 0xb4, 0x58, 0xe5, 0xb8, 0x11, 0xbd, 0xef, 
+	0xc2, 0x1e, 0xd1, 0xce, 0x45, 0x59, 0x5f, 0x8f, 0x2f, 0x51, 0x98, 0x42, 0xbb, 0xfe, 0x16, 0x90, 
+	0x62, 0xa3, 0xbf, 0x92, 0x06, 0xc1, 0xa3, 0x99, 0x95, 0x12, 0x14, 0x28, 0x6c, 0xfb, 0xce, 0xfc, 
+	0x7a, 0x7d, 0xd8, 0xd6, 0x99, 0xeb, 0x24, 0x14, 0x6d, 0x61, 0x7c, 0x4e, 0x33, 0x01, 0x4d, 0x4b, 
+	0x56, 0x97, 0x33, 0xf5, 0xa5, 0x02, 0xcd, 0x01, 0x49, 0xa5, 0x11, 0xdd, 0x5f, 0xc5, 0x72, 0xfd, 
+	0x86, 0xf2, 0x75, 0x14, 0x78, 0x1b, 0xce, 0x44, 0x1c, 0x9a, 0xeb, 0x1c, 0x0c, 0x5a, 0xac, 0xcc, 
+	0x93, 0xee, 0x01, 0xf8, 0xeb, 0x8b, 0x0f, 0xc9, 0xa6, 0xbb, 0x77, 0x33, 0xba, 0x13, 0x1a, 0xc7, 
+	0xfc, 0x49, 0x09, 0x62, 0xba, 0x7c, 0xda, 0x29, 0x23, 0xaf, 0x33, 0xf3, 0x6c, 0xfe, 0x50, 0x9c, 
+	0xdb, 0x78, 0x16, 0x27, 0x86, 0xf9, 0x5f, 0x51, 0x2f, 0x96, 0xaa, 0x8f, 0xb3, 0xab, 0x2d, 0x60, 
+	0x14, 0xf9, 0x12, 0x69, 0x92, 0xfb, 0x70, 0xeb, 0x5e, 0x94, 0x02, 0x3b, 0x67, 0x42, 0x4b, 0x26, 
+	0xfc, 0xa9, 0xf3, 0xa5, 0x5c, 0x66, 0x5b, 0xe6, 0x6b, 0x56, 0x85, 0x47, 0x62, 0xba, 0xe5, 0x7b, 
+	0x2b, 0x41, 0x99, 0xa9, 0x43, 0x22, 0x86, 0xba, 0xa5, 0x29, 0xa2, 0x9a, 0xce, 0x31, 0x4b, 0xba, 
+	0xf3, 0x1e, 0xd1, 0x40, 0x2e, 0xfa, 0xbe, 0xbd, 0x36, 0x4c, 0x2c, 0x97, 0xf0, 0x85, 0x1c, 0x35, 
+	0x09, 0x3f, 0x90, 0x86, 0x1d, 0x79, 0x02, 0x03, 0x01, 0x00, 0x01, 0xa3, 0x45, 0x30, 0x43, 0x30, 
+	0x12, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x08, 0x30, 0x06, 0x01, 0x01, 0xff, 
+	0x02, 0x01, 0x01, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04, 0x04, 0x03, 
+	0x02, 0x01, 0x06, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x27, 0xc8, 
+	0x75, 0xce, 0xbd, 0x7d, 0x44, 0x74, 0xb1, 0x7b, 0x6b, 0x9d, 0x49, 0xa1, 0xc2, 0x79, 0x80, 0xd8, 
+	0x2e, 0x3f, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x0a, 0x30, 
+	0x00, 0x03, 0x82, 0x01, 0x01, 0x00, 0x11, 0x81, 0x62, 0x7c, 0x8a, 0x3f, 0x9a, 0x8c, 0xb3, 0x43, 
+	0x06, 0x7e, 0xd8, 0x02, 0x62, 0x06, 0xac, 0x2f, 0x3a, 0xe9, 0x66, 0xd7, 0x9a, 0x4d, 0xd8, 0xec, 
+	0xa2, 0x40, 0x17, 0x91, 0xb3, 0xe0, 0x3e, 0xec, 0xe1, 0xef, 0xf6, 0x98, 0xa7, 0xbc, 0x88, 0x84, 
+	0xda, 0x84, 0x7f, 0x17, 0xc8, 0xf6, 0xa7, 0xc8, 0x3b, 0x89, 0xcf, 0x86, 0x3b, 0xba, 0xb6, 0x5e, 
+	0x3a, 0xb6, 0x84, 0x89, 0x23, 0xd7, 0x04, 0xfa, 0x1a, 0x60, 0x3e, 0x26, 0x73, 0x02, 0xd7, 0x2e, 
+	0xd1, 0x4a, 0x82, 0xc8, 0xb8, 0x44, 0x19, 0xba, 0x51, 0x37, 0x54, 0x26, 0xf7, 0x3e, 0x91, 0xbd, 
+	0x54, 0x31, 0x4e, 0x7f, 0xc1, 0xc2, 0x0f, 0x2f, 0xd6, 0x01, 0x3b, 0xfa, 0xee, 0x97, 0x13, 0xbc, 
+	0x0f, 0x29, 0x5c, 0x2a, 0x87, 0x92, 0xfb, 0x6e, 0xba, 0x5d, 0x2a, 0xe9, 0x42, 0xac, 0x8c, 0xf4, 
+	0x6d, 0x28, 0xf0, 0xba, 0x64, 0x3c, 0x20, 0xb5, 0xcc, 0xf1, 0xed, 0xbc, 0xc5, 0xef, 0x30, 0x9d, 
+	0x03, 0xe2, 0x7c, 0xc8, 0xce, 0x47, 0x34, 0x4d, 0xe6, 0x8c, 0x69, 0x5d, 0x2c, 0x12, 0xb6, 0xb6, 
+	0x65, 0xec, 0xdf, 0xae, 0x5c, 0x0a, 0x9a, 0x37, 0xee, 0xb1, 0x35, 0x03, 0xc1, 0xab, 0xb1, 0x9f, 
+	0x21, 0x2d, 0x37, 0xa8, 0x13, 0x88, 0xf8, 0x42, 0x2f, 0x25, 0x40, 0x32, 0xe8, 0xf6, 0x60, 0x9b, 
+	0x20, 0x89, 0x42, 0x5f, 0xb9, 0x70, 0x8b, 0x6c, 0x07, 0xde, 0x54, 0x2b, 0x6e, 0xfc, 0xe4, 0xad, 
+	0xfe, 0x33, 0x3a, 0x25, 0xbf, 0x09, 0xeb, 0x64, 0xfe, 0x71, 0xd4, 0x7c, 0xda, 0x64, 0x0d, 0xe2, 
+	0xa9, 0x3c, 0x72, 0xab, 0x8e, 0x6b, 0xff, 0xfd, 0xc6, 0xe9, 0x60, 0x91, 0x94, 0x16, 0x46, 0x15, 
+	0xe7, 0xe4, 0x27, 0x06, 0x1e, 0x11, 0x2e, 0xa9, 0x19, 0xda, 0xe1, 0x75, 0xd0, 0x04, 0xfd, 0x06, 
+	0xb3, 0x41, 0x7b, 0xca, 0xe9, 0x7f
+};
+
+const uint8_t customerCert[] = {
+	0x30, 0x82, 0x04, 0x14, 0x30, 0x82, 0x02, 0xfc, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x0f, 0x00, 
+	0x93, 0x90, 0x00, 0x00, 0x00, 0x2c, 0x8c, 0x24, 0x67, 0x47, 0xcb, 0xb3, 0xfd, 0x6c, 0x30, 0x0d, 
+	0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x0a, 0x30, 0x00, 0x30, 0x81, 0x91, 
+	0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x55, 0x4b, 0x31, 0x0f, 0x30, 
+	0x0d, 0x06, 0x03, 0x55, 0x04, 0x08, 0x13, 0x06, 0x4c, 0x6f, 0x6e, 0x64, 0x6f, 0x6e, 0x31, 0x0f, 
+	0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x07, 0x13, 0x06, 0x4c, 0x6f, 0x6e, 0x64, 0x6f, 0x6e, 0x31, 
+	0x14, 0x30, 0x12, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x13, 0x0b, 0x43, 0x49, 0x20, 0x50, 0x6c, 0x75, 
+	0x73, 0x20, 0x4c, 0x4c, 0x50, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x13, 0x06, 
+	0x45, 0x75, 0x72, 0x6f, 0x70, 0x65, 0x31, 0x13, 0x30, 0x11, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x13, 
+	0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x24, 0x30, 0x22, 0x06, 
+	0x03, 0x55, 0x04, 0x03, 0x13, 0x1b, 0x43, 0x49, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x52, 0x6f, 
+	0x6f, 0x74, 0x20, 0x43, 0x41, 0x20, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 
+	0x65, 0x30, 0x1e, 0x17, 0x0d, 0x31, 0x30, 0x30, 0x34, 0x31, 0x33, 0x31, 0x35, 0x30, 0x36, 0x35, 
+	0x31, 0x5a, 0x17, 0x0d, 0x39, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x35, 0x39, 0x35, 0x39, 
+	0x5a, 0x30, 0x81, 0x92, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x4b, 
+	0x52, 0x31, 0x0e, 0x30, 0x0c, 0x06, 0x03, 0x55, 0x04, 0x08, 0x13, 0x05, 0x53, 0x65, 0x6f, 0x75, 
+	0x6c, 0x31, 0x0e, 0x30, 0x0c, 0x06, 0x03, 0x55, 0x04, 0x07, 0x13, 0x05, 0x53, 0x65, 0x6f, 0x75, 
+	0x6c, 0x31, 0x1e, 0x30, 0x1c, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x13, 0x15, 0x47, 0x69, 0x42, 0x61, 
+	0x68, 0x6e, 0x20, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x20, 0x43, 0x6f, 0x2e, 0x2c, 0x20, 0x4c, 0x74, 
+	0x64, 0x31, 0x13, 0x30, 0x11, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x13, 0x0a, 0x50, 0x72, 0x6f, 0x64, 
+	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x2e, 0x30, 0x2c, 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 
+	0x25, 0x43, 0x49, 0x20, 0x50, 0x6c, 0x75, 0x73, 0x20, 0x52, 0x4f, 0x54, 0x20, 0x66, 0x6f, 0x72, 
+	0x20, 0x47, 0x69, 0x42, 0x61, 0x68, 0x6e, 0x20, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x20, 0x43, 0x6f, 
+	0x2e, 0x2c, 0x20, 0x4c, 0x74, 0x64, 0x30, 0x82, 0x01, 0x22, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 
+	0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x01, 0x05, 0x00, 0x03, 0x82, 0x01, 0x0f, 0x00, 0x30, 0x82, 
+	0x01, 0x0a, 0x02, 0x82, 0x01, 0x01, 0x00, 0xd6, 0x5f, 0x9f, 0xba, 0x3b, 0x5c, 0x17, 0xe0, 0x21, 
+	0x1c, 0x93, 0x6b, 0xd1, 0x1f, 0xbb, 0xcc, 0xce, 0xab, 0xe9, 0x87, 0xfc, 0x31, 0xf2, 0xce, 0xd3, 
+	0xf3, 0x24, 0xc9, 0xec, 0x0a, 0x6f, 0x66, 0xa1, 0xed, 0x57, 0xe4, 0xf1, 0x07, 0x14, 0x7b, 0xfa, 
+	0x89, 0x9d, 0x39, 0x53, 0x78, 0x52, 0xe4, 0x78, 0x13, 0x01, 0x31, 0x07, 0xe1, 0x06, 0x77, 0x51, 
+	0x6a, 0x3c, 0xd8, 0x6e, 0xcb, 0x3c, 0xfa, 0xd7, 0x66, 0x26, 0xcf, 0xc8, 0x50, 0xb2, 0x43, 0x00, 
+	0x2a, 0x5a, 0xd5, 0x47, 0x46, 0xe5, 0xec, 0xc9, 0x29, 0xeb, 0xe3, 0x4b, 0xe8, 0x14, 0x25, 0x74, 
+	0xda, 0x7d, 0xfd, 0xf0, 0x04, 0x4a, 0xd1, 0xae, 0xae, 0x31, 0xe7, 0x6a, 0x55, 0xc2, 0x71, 0xea, 
+	0xcc, 0x6c, 0x11, 0x6f, 0x85, 0xc3, 0xc6, 0xcc, 0xb3, 0xc6, 0x55, 0x60, 0x66, 0x06, 0xaa, 0xa2, 
+	0x39, 0xdd, 0x83, 0x8e, 0x7f, 0xc3, 0x6f, 0xe0, 0x04, 0x30, 0x4f, 0xce, 0xa0, 0xf9, 0xc8, 0x2c, 
+	0xdb, 0x39, 0x92, 0x21, 0x74, 0xad, 0xee, 0xd1, 0x05, 0xb6, 0xbf, 0x68, 0xc9, 0x31, 0x90, 0x97, 
+	0x7e, 0xc3, 0xe7, 0xf8, 0x68, 0x8b, 0x03, 0x42, 0x5c, 0x25, 0x97, 0xa4, 0xdb, 0x43, 0xc6, 0x4d, 
+	0xc4, 0x48, 0x89, 0x44, 0xfa, 0x96, 0xbf, 0xc8, 0x86, 0x5f, 0xf4, 0x12, 0xd8, 0xcd, 0x7c, 0xe8, 
+	0x2c, 0xe2, 0xf9, 0xe1, 0x15, 0xba, 0x22, 0x30, 0x1a, 0x7f, 0xb2, 0x78, 0xd5, 0x93, 0x17, 0xca, 
+	0x42, 0x86, 0x2a, 0x1d, 0xe7, 0xbc, 0xd3, 0x7d, 0xc5, 0x93, 0x7c, 0x27, 0xac, 0x27, 0x03, 0x47, 
+	0x65, 0xd2, 0xad, 0x14, 0xfa, 0x11, 0xb7, 0x5e, 0x33, 0x47, 0xd0, 0xca, 0xc8, 0x0a, 0xc3, 0x48, 
+	0xd0, 0xf1, 0x3f, 0xc1, 0x7d, 0x04, 0x7b, 0xce, 0x7e, 0xf9, 0x91, 0x02, 0x34, 0xba, 0x24, 0x52, 
+	0xab, 0xac, 0xf8, 0x7b, 0xe7, 0xf8, 0x49, 0x02, 0x03, 0x01, 0x00, 0x01, 0xa3, 0x66, 0x30, 0x64, 
+	0x30, 0x1f, 0x06, 0x03, 0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0x27, 0xc8, 0x75, 
+	0xce, 0xbd, 0x7d, 0x44, 0x74, 0xb1, 0x7b, 0x6b, 0x9d, 0x49, 0xa1, 0xc2, 0x79, 0x80, 0xd8, 0x2e, 
+	0x3f, 0x30, 0x12, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x08, 0x30, 0x06, 0x01, 
+	0x01, 0xff, 0x02, 0x01, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04, 
+	0x04, 0x03, 0x02, 0x02, 0x04, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 
+	0xe9, 0x82, 0xb5, 0x8b, 0x94, 0x03, 0xe3, 0xd8, 0x92, 0xf2, 0x3e, 0x68, 0x78, 0x56, 0x70, 0x5c, 
+	0x18, 0x91, 0xf0, 0x6c, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 
+	0x0a, 0x30, 0x00, 0x03, 0x82, 0x01, 0x01, 0x00, 0x3d, 0xe3, 0x66, 0x85, 0xb2, 0xd1, 0xc9, 0xad, 
+	0x6c, 0x4f, 0x00, 0xa3, 0x9f, 0xc4, 0xd1, 0x31, 0xf2, 0x06, 0xbb, 0xe8, 0xba, 0xb7, 0xd7, 0x5a, 
+	0x4c, 0x61, 0xa1, 0x8b, 0xee, 0x4c, 0x5c, 0x2e, 0x7e, 0xc5, 0x5f, 0xc6, 0x4b, 0x84, 0x9f, 0x3a, 
+	0xef, 0x3e, 0x81, 0xc5, 0xcc, 0x31, 0x23, 0x0f, 0x40, 0x4d, 0xa3, 0x41, 0x9e, 0xdf, 0x7c, 0x03, 
+	0x82, 0x4e, 0x04, 0xd0, 0xb3, 0x87, 0x61, 0x2e, 0xd2, 0xa2, 0xb6, 0x09, 0xfe, 0x71, 0xa5, 0x43, 
+	0x64, 0x74, 0x58, 0x0c, 0x41, 0x1f, 0xa2, 0xbf, 0x03, 0x24, 0xec, 0x7a, 0x18, 0x0c, 0xac, 0x1a, 
+	0x28, 0x86, 0x6a, 0x9e, 0x34, 0xfc, 0x03, 0x63, 0x69, 0xa3, 0x94, 0xec, 0x25, 0x2f, 0xf5, 0x09, 
+	0x68, 0xfb, 0xc3, 0x6a, 0x41, 0x30, 0xa2, 0xfd, 0x81, 0xc2, 0x42, 0xd0, 0x40, 0x9b, 0xb1, 0x31, 
+	0x2f, 0x8e, 0x99, 0xbc, 0x42, 0xe2, 0xc4, 0x74, 0xb9, 0x08, 0x51, 0x6e, 0xf2, 0xd0, 0xa7, 0x04, 
+	0xd1, 0x7a, 0xf1, 0x96, 0xda, 0x61, 0xd3, 0x86, 0xcd, 0x81, 0x1c, 0x92, 0x5a, 0xf5, 0x0d, 0x2c, 
+	0xd1, 0x17, 0x29, 0x30, 0xef, 0x88, 0x53, 0x97, 0x79, 0xed, 0xb8, 0x65, 0x9d, 0xfc, 0x6f, 0x71, 
+	0x2b, 0xd0, 0x50, 0xca, 0x39, 0x3d, 0x74, 0xe6, 0xf6, 0x34, 0xf8, 0xe8, 0x41, 0x66, 0xa5, 0x2a, 
+	0xdc, 0xc4, 0x41, 0x70, 0x4f, 0x45, 0x28, 0x89, 0x97, 0x6d, 0xc3, 0xca, 0x77, 0x6f, 0x12, 0xaf, 
+	0x21, 0x40, 0x27, 0xc6, 0xc9, 0xaf, 0xc8, 0x75, 0x1b, 0xb8, 0x67, 0x74, 0xe5, 0x19, 0x21, 0x28, 
+	0xae, 0x4e, 0x2c, 0xe4, 0x81, 0xa3, 0x2e, 0xcd, 0xc1, 0xe7, 0xfb, 0x39, 0xb4, 0xec, 0xfd, 0x58, 
+	0xf1, 0x70, 0xe8, 0xeb, 0x3b, 0x9a, 0x85, 0xcf, 0x0d, 0x78, 0xbd, 0x68, 0x4e, 0x76, 0xd2, 0x8b, 
+	0xdc, 0x6a, 0xf7, 0xff, 0xf8, 0x87, 0x4a, 0x9b
+};
+
+const uint8_t deviceCert[] = {
+	0x30, 0x82, 0x04, 0x06, 0x30, 0x82, 0x02, 0xee, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x0d, 0x69, 
+	0x00, 0x00, 0x00, 0x2c, 0xbb, 0x4f, 0x1e, 0xec, 0xec, 0xcb, 0x69, 0x51, 0x30, 0x0d, 0x06, 0x09, 
+	0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x0a, 0x30, 0x00, 0x30, 0x81, 0x92, 0x31, 0x0b, 
+	0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x4b, 0x52, 0x31, 0x0e, 0x30, 0x0c, 0x06, 
+	0x03, 0x55, 0x04, 0x08, 0x13, 0x05, 0x53, 0x65, 0x6f, 0x75, 0x6c, 0x31, 0x0e, 0x30, 0x0c, 0x06, 
+	0x03, 0x55, 0x04, 0x07, 0x13, 0x05, 0x53, 0x65, 0x6f, 0x75, 0x6c, 0x31, 0x1e, 0x30, 0x1c, 0x06, 
+	0x03, 0x55, 0x04, 0x0a, 0x13, 0x15, 0x47, 0x69, 0x42, 0x61, 0x68, 0x6e, 0x20, 0x4d, 0x65, 0x64, 
+	0x69, 0x61, 0x20, 0x43, 0x6f, 0x2e, 0x2c, 0x20, 0x4c, 0x74, 0x64, 0x31, 0x13, 0x30, 0x11, 0x06, 
+	0x03, 0x55, 0x04, 0x0b, 0x13, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 
+	0x31, 0x2e, 0x30, 0x2c, 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x25, 0x43, 0x49, 0x20, 0x50, 0x6c, 
+	0x75, 0x73, 0x20, 0x52, 0x4f, 0x54, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x47, 0x69, 0x42, 0x61, 0x68, 
+	0x6e, 0x20, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x20, 0x43, 0x6f, 0x2e, 0x2c, 0x20, 0x4c, 0x74, 0x64, 
+	0x30, 0x1e, 0x17, 0x0d, 0x31, 0x30, 0x30, 0x36, 0x31, 0x35, 0x31, 0x30, 0x35, 0x38, 0x33, 0x32, 
+	0x5a, 0x17, 0x0d, 0x36, 0x30, 0x30, 0x36, 0x31, 0x35, 0x31, 0x30, 0x35, 0x38, 0x33, 0x32, 0x5a, 
+	0x30, 0x81, 0x91, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x4b, 0x52, 
+	0x31, 0x0e, 0x30, 0x0c, 0x06, 0x03, 0x55, 0x04, 0x08, 0x13, 0x05, 0x53, 0x65, 0x6f, 0x75, 0x6c, 
+	0x31, 0x0e, 0x30, 0x0c, 0x06, 0x03, 0x55, 0x04, 0x07, 0x13, 0x05, 0x53, 0x65, 0x6f, 0x75, 0x6c, 
+	0x31, 0x1e, 0x30, 0x1c, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x13, 0x15, 0x47, 0x69, 0x42, 0x61, 0x68, 
+	0x6e, 0x20, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x20, 0x43, 0x6f, 0x2e, 0x2c, 0x20, 0x4c, 0x74, 0x64, 
+	0x31, 0x13, 0x30, 0x11, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x13, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75, 
+	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x13, 0x09, 
+	0x54, 0x56, 0x4c, 0x49, 0x54, 0x45, 0x2d, 0x53, 0x35, 0x31, 0x19, 0x30, 0x17, 0x06, 0x03, 0x55, 
+	0x04, 0x03, 0x13, 0x10, 0x34, 0x45, 0x32, 0x39, 0x37, 0x44, 0x33, 0x30, 0x30, 0x45, 0x30, 0x31, 
+	0x34, 0x44, 0x46, 0x31, 0x30, 0x82, 0x01, 0x22, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 
+	0xf7, 0x0d, 0x01, 0x01, 0x01, 0x05, 0x00, 0x03, 0x82, 0x01, 0x0f, 0x00, 0x30, 0x82, 0x01, 0x0a, 
+	0x02, 0x82, 0x01, 0x01, 0x00, 0xe1, 0x44, 0xd5, 0x84, 0x5d, 0xd8, 0x04, 0xa1, 0x58, 0x11, 0xb7, 
+	0x9e, 0x7e, 0xf9, 0x7b, 0x25, 0x4d, 0x62, 0xc4, 0x50, 0x64, 0xbd, 0xb9, 0x44, 0xb8, 0x74, 0x4f, 
+	0x7a, 0x97, 0x19, 0xab, 0x8d, 0x86, 0x88, 0xa6, 0x25, 0x17, 0x7c, 0xd2, 0x3f, 0x5a, 0x8e, 0x3e, 
+	0x6e, 0x12, 0x48, 0xe4, 0x61, 0xe4, 0x91, 0xd2, 0xc0, 0x1f, 0xa2, 0x67, 0xee, 0x17, 0x2a, 0x80, 
+	0x4e, 0x73, 0x70, 0x52, 0x6d, 0x08, 0x95, 0x5d, 0x6d, 0x40, 0xfd, 0xf7, 0x8c, 0x22, 0x48, 0x87, 
+	0xf6, 0x69, 0xf1, 0xbd, 0xac, 0x7b, 0x1c, 0xe1, 0x48, 0x3a, 0xd4, 0xba, 0x69, 0xd6, 0x84, 0x8e, 
+	0x6f, 0x89, 0x14, 0x20, 0xc3, 0x52, 0xd7, 0xb9, 0x51, 0x6c, 0x93, 0x6e, 0x16, 0x5c, 0x3d, 0x17, 
+	0xcf, 0x18, 0x80, 0x30, 0xe2, 0x4a, 0x1d, 0x17, 0x36, 0xc9, 0x9d, 0x35, 0xd0, 0x1d, 0xd5, 0xe6, 
+	0x33, 0x2e, 0xaa, 0x33, 0x7c, 0x5c, 0xba, 0x8e, 0x93, 0x29, 0x0f, 0x5d, 0x9d, 0xb0, 0xd2, 0x01, 
+	0x66, 0xc1, 0xf8, 0x68, 0xfc, 0x33, 0x49, 0xc8, 0x4b, 0x9d, 0xb5, 0x71, 0xa6, 0x27, 0x40, 0x75, 
+	0x0a, 0xf1, 0xea, 0xb3, 0xff, 0x54, 0x1a, 0xf7, 0xe0, 0x4a, 0xe3, 0x59, 0x06, 0x08, 0xd7, 0x6a, 
+	0x8a, 0x01, 0xf0, 0xb2, 0xa3, 0xc6, 0xd1, 0x8a, 0xe2, 0xfe, 0x2a, 0xf7, 0x65, 0xc1, 0x4a, 0xdd, 
+	0xc7, 0x20, 0x5c, 0xc3, 0x0e, 0x41, 0x5c, 0x2d, 0xc3, 0xdd, 0xa1, 0x46, 0x29, 0xbe, 0x2e, 0xf6, 
+	0xdc, 0xa3, 0xff, 0xb1, 0xcd, 0x1f, 0x6e, 0x4a, 0xfa, 0xd3, 0x17, 0x4f, 0x57, 0xb0, 0x4f, 0xdd, 
+	0xfe, 0x5f, 0xb1, 0x2b, 0x7a, 0xcd, 0x94, 0xd3, 0xae, 0xca, 0x53, 0x0a, 0x6c, 0x06, 0x9d, 0xc7, 
+	0x13, 0x34, 0x3d, 0x22, 0x08, 0x9e, 0xa6, 0xce, 0xce, 0xec, 0x6b, 0x47, 0x8d, 0xc3, 0x33, 0x21, 
+	0x2b, 0x87, 0x99, 0x81, 0xa9, 0x02, 0x03, 0x01, 0x00, 0x01, 0xa3, 0x5a, 0x30, 0x58, 0x30, 0x1f, 
+	0x06, 0x03, 0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0xe9, 0x82, 0xb5, 0x8b, 0x94, 
+	0x03, 0xe3, 0xd8, 0x92, 0xf2, 0x3e, 0x68, 0x78, 0x56, 0x70, 0x5c, 0x18, 0x91, 0xf0, 0x6c, 0x30, 
+	0x0c, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 
+	0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x17, 0x06, 
+	0x08, 0x2b, 0x06, 0x01, 0x05, 0x05, 0x07, 0x01, 0x19, 0x01, 0x01, 0xff, 0x04, 0x08, 0x30, 0x06, 
+	0x02, 0x01, 0x01, 0x02, 0x01, 0x00, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 
+	0x01, 0x01, 0x0a, 0x30, 0x00, 0x03, 0x82, 0x01, 0x01, 0x00, 0x44, 0x68, 0xea, 0x3d, 0xc6, 0x9f, 
+	0xc6, 0xd9, 0x45, 0xf8, 0xdb, 0xdf, 0xfb, 0x87, 0x12, 0xe5, 0x0b, 0xd5, 0x80, 0x58, 0x84, 0xc9, 
+	0xe3, 0x23, 0x55, 0x99, 0x89, 0x33, 0xa8, 0x20, 0x0a, 0x1c, 0xbc, 0x45, 0x1b, 0xf4, 0x7b, 0x13, 
+	0x51, 0x4e, 0xeb, 0xe1, 0x66, 0x30, 0xe4, 0x2f, 0x4b, 0xe9, 0x9d, 0xfe, 0x6f, 0xbb, 0x00, 0x80, 
+	0x3f, 0x0a, 0x20, 0xe0, 0x8e, 0xf2, 0x1e, 0x20, 0x5c, 0x31, 0x8e, 0xe9, 0x84, 0x12, 0xb0, 0x13, 
+	0xc3, 0x91, 0xb4, 0x9c, 0xe5, 0xbd, 0x82, 0xfb, 0xde, 0xcf, 0x9d, 0x2e, 0x64, 0xa0, 0x14, 0x5c, 
+	0x83, 0x4d, 0xdf, 0xad, 0xc0, 0xbe, 0xec, 0x1f, 0x01, 0x94, 0x0f, 0x5e, 0x1b, 0x84, 0x53, 0x22, 
+	0xba, 0x2e, 0xb3, 0x96, 0xb7, 0xbb, 0xea, 0x9c, 0xa5, 0x75, 0xbb, 0xab, 0x9e, 0xe2, 0x10, 0x45, 
+	0x1f, 0x41, 0xc9, 0x2f, 0x9b, 0x69, 0x50, 0x25, 0x0d, 0xac, 0x1c, 0x0b, 0x22, 0x7d, 0x52, 0x18, 
+	0x35, 0x5a, 0xc5, 0x0e, 0x11, 0x28, 0xcf, 0x5a, 0xae, 0x72, 0x86, 0x23, 0x8e, 0x90, 0x1b, 0xef, 
+	0x9a, 0xd5, 0x34, 0xa6, 0x21, 0x54, 0x93, 0xed, 0x7c, 0xae, 0x52, 0x8d, 0x18, 0xba, 0xa8, 0xea, 
+	0x78, 0xde, 0xa1, 0xc4, 0x80, 0x0f, 0x68, 0x46, 0xd1, 0xec, 0xc1, 0x3e, 0x69, 0xa5, 0xa2, 0x19, 
+	0x03, 0xdf, 0x1c, 0x26, 0x91, 0xfb, 0xc6, 0xea, 0xf3, 0xd2, 0x48, 0xda, 0xe6, 0x41, 0x6e, 0xff, 
+	0xa7, 0x08, 0xe7, 0x3b, 0x73, 0x4d, 0x98, 0xf0, 0x5f, 0x07, 0xfb, 0x87, 0x8e, 0xf3, 0xd2, 0x62, 
+	0x2a, 0x61, 0x12, 0x35, 0xba, 0x86, 0x92, 0x46, 0x9d, 0xde, 0x8b, 0x71, 0xfe, 0x25, 0x6b, 0xfa, 
+	0x80, 0x5e, 0x85, 0xa6, 0x54, 0x68, 0x66, 0x0d, 0xff, 0xc5, 0x22, 0x4d, 0x9c, 0xf1, 0xa2, 0xd8, 
+	0x22, 0x3e, 0xc3, 0xf1, 0x43, 0x5c, 0x09, 0x39, 0x87, 0x07
+};
+
+const uint8_t rsaPrivateKey[] = {
+	0x30, 0x82, 0x04, 0xa2, 0x02, 0x01, 0x00, 0x02, 0x82, 0x01, 0x01, 0x00, 0xe1, 0x44, 0xd5, 0x84, 
+	0x5d, 0xd8, 0x04, 0xa1, 0x58, 0x11, 0xb7, 0x9e, 0x7e, 0xf9, 0x7b, 0x25, 0x4d, 0x62, 0xc4, 0x50, 
+	0x64, 0xbd, 0xb9, 0x44, 0xb8, 0x74, 0x4f, 0x7a, 0x97, 0x19, 0xab, 0x8d, 0x86, 0x88, 0xa6, 0x25, 
+	0x17, 0x7c, 0xd2, 0x3f, 0x5a, 0x8e, 0x3e, 0x6e, 0x12, 0x48, 0xe4, 0x61, 0xe4, 0x91, 0xd2, 0xc0, 
+	0x1f, 0xa2, 0x67, 0xee, 0x17, 0x2a, 0x80, 0x4e, 0x73, 0x70, 0x52, 0x6d, 0x08, 0x95, 0x5d, 0x6d, 
+	0x40, 0xfd, 0xf7, 0x8c, 0x22, 0x48, 0x87, 0xf6, 0x69, 0xf1, 0xbd, 0xac, 0x7b, 0x1c, 0xe1, 0x48, 
+	0x3a, 0xd4, 0xba, 0x69, 0xd6, 0x84, 0x8e, 0x6f, 0x89, 0x14, 0x20, 0xc3, 0x52, 0xd7, 0xb9, 0x51, 
+	0x6c, 0x93, 0x6e, 0x16, 0x5c, 0x3d, 0x17, 0xcf, 0x18, 0x80, 0x30, 0xe2, 0x4a, 0x1d, 0x17, 0x36, 
+	0xc9, 0x9d, 0x35, 0xd0, 0x1d, 0xd5, 0xe6, 0x33, 0x2e, 0xaa, 0x33, 0x7c, 0x5c, 0xba, 0x8e, 0x93, 
+	0x29, 0x0f, 0x5d, 0x9d, 0xb0, 0xd2, 0x01, 0x66, 0xc1, 0xf8, 0x68, 0xfc, 0x33, 0x49, 0xc8, 0x4b, 
+	0x9d, 0xb5, 0x71, 0xa6, 0x27, 0x40, 0x75, 0x0a, 0xf1, 0xea, 0xb3, 0xff, 0x54, 0x1a, 0xf7, 0xe0, 
+	0x4a, 0xe3, 0x59, 0x06, 0x08, 0xd7, 0x6a, 0x8a, 0x01, 0xf0, 0xb2, 0xa3, 0xc6, 0xd1, 0x8a, 0xe2, 
+	0xfe, 0x2a, 0xf7, 0x65, 0xc1, 0x4a, 0xdd, 0xc7, 0x20, 0x5c, 0xc3, 0x0e, 0x41, 0x5c, 0x2d, 0xc3, 
+	0xdd, 0xa1, 0x46, 0x29, 0xbe, 0x2e, 0xf6, 0xdc, 0xa3, 0xff, 0xb1, 0xcd, 0x1f, 0x6e, 0x4a, 0xfa, 
+	0xd3, 0x17, 0x4f, 0x57, 0xb0, 0x4f, 0xdd, 0xfe, 0x5f, 0xb1, 0x2b, 0x7a, 0xcd, 0x94, 0xd3, 0xae, 
+	0xca, 0x53, 0x0a, 0x6c, 0x06, 0x9d, 0xc7, 0x13, 0x34, 0x3d, 0x22, 0x08, 0x9e, 0xa6, 0xce, 0xce, 
+	0xec, 0x6b, 0x47, 0x8d, 0xc3, 0x33, 0x21, 0x2b, 0x87, 0x99, 0x81, 0xa9, 0x02, 0x03, 0x01, 0x00, 
+	0x01, 0x02, 0x82, 0x01, 0x00, 0x12, 0x8d, 0x0d, 0x9c, 0x51, 0xf2, 0x19, 0x27, 0x84, 0x4e, 0x29, 
+	0x35, 0xe7, 0x34, 0xfa, 0x5c, 0x2f, 0x0c, 0x44, 0x28, 0x6e, 0xb3, 0x65, 0x0f, 0x70, 0xb5, 0x3b, 
+	0x5a, 0x58, 0x19, 0x28, 0x14, 0x86, 0x90, 0xb8, 0x45, 0xf3, 0xb2, 0x36, 0xca, 0x3a, 0xd5, 0xdd, 
+	0xf4, 0x48, 0x93, 0x32, 0x23, 0x91, 0xa4, 0x24, 0x9b, 0xe7, 0xbf, 0x03, 0x1a, 0x0b, 0x54, 0x57, 
+	0xae, 0x9e, 0x39, 0x10, 0xc0, 0xa3, 0xe5, 0x51, 0x05, 0x4f, 0x45, 0xda, 0xdd, 0xf2, 0x70, 0xd0, 
+	0xa9, 0x8d, 0x3d, 0xf8, 0x25, 0xbd, 0x19, 0xba, 0xbf, 0xad, 0x00, 0x99, 0xbd, 0x5f, 0x8a, 0x19, 
+	0x04, 0xbc, 0x60, 0x28, 0xf6, 0x8c, 0xda, 0xf1, 0x0a, 0xf0, 0x8b, 0x0f, 0x94, 0xcd, 0xd1, 0xc6, 
+	0x25, 0x2a, 0xda, 0x5b, 0xac, 0x36, 0xf8, 0x40, 0x52, 0x25, 0xb6, 0x49, 0x99, 0x32, 0xeb, 0xcb, 
+	0x82, 0x49, 0x84, 0x80, 0xaa, 0xc4, 0x95, 0x34, 0x8d, 0x9a, 0x9a, 0x7e, 0x7b, 0xe4, 0x9f, 0x67, 
+	0x32, 0xa1, 0x1d, 0x82, 0xb9, 0x61, 0x61, 0xc4, 0x3a, 0xa3, 0x3a, 0x6a, 0xda, 0xa3, 0x4d, 0x13, 
+	0x44, 0x99, 0x63, 0xdc, 0x12, 0xc1, 0xb1, 0xd8, 0x16, 0x5b, 0x12, 0xca, 0x04, 0x09, 0x47, 0x5c, 
+	0xb8, 0x88, 0x9a, 0x0f, 0x99, 0xb8, 0x66, 0x3a, 0x2f, 0x27, 0xc9, 0x6c, 0x7e, 0x21, 0x4c, 0x69, 
+	0xbe, 0xc4, 0x5b, 0xac, 0xb9, 0x4a, 0xa1, 0x0f, 0x97, 0x87, 0x22, 0xc2, 0xba, 0xed, 0x9d, 0x59, 
+	0x26, 0x22, 0x1a, 0x1f, 0x5d, 0x26, 0xc0, 0x1e, 0xd5, 0xcd, 0x35, 0x2f, 0xee, 0xeb, 0xa7, 0x74, 
+	0xb3, 0xbc, 0x29, 0x95, 0x8b, 0x7c, 0x38, 0xb7, 0xd5, 0xd5, 0x97, 0x7f, 0x81, 0x43, 0x9a, 0xa2, 
+	0x78, 0x9d, 0x0c, 0xe4, 0x92, 0xfb, 0x91, 0x23, 0x90, 0xec, 0x51, 0xc9, 0x98, 0x0c, 0x23, 0x09, 
+	0x5c, 0x29, 0xe7, 0xfe, 0x81, 0x02, 0x81, 0x81, 0x00, 0xf4, 0x56, 0x37, 0x91, 0x61, 0x84, 0x89, 
+	0x88, 0x09, 0x3e, 0x88, 0x4e, 0xc3, 0x37, 0x4e, 0x70, 0x26, 0x86, 0xcf, 0x7a, 0xea, 0x8e, 0x4f, 
+	0x35, 0x33, 0xf7, 0xec, 0xba, 0x91, 0x65, 0x62, 0xc5, 0x74, 0xa2, 0x53, 0x96, 0x99, 0xad, 0xc2, 
+	0x37, 0x18, 0x89, 0xaf, 0xcb, 0xda, 0x3f, 0x35, 0x66, 0x1b, 0x2b, 0x13, 0xae, 0xa4, 0xa6, 0x7e, 
+	0x95, 0x98, 0xb6, 0xef, 0x8e, 0x8b, 0xe4, 0xd9, 0x79, 0x8c, 0xeb, 0x38, 0x17, 0xbe, 0xe4, 0xf7, 
+	0x16, 0xae, 0xe0, 0x8e, 0xba, 0xb4, 0xfe, 0x40, 0x9b, 0x08, 0x65, 0x98, 0xc8, 0x19, 0xc8, 0x16, 
+	0xdd, 0xf3, 0x80, 0x42, 0x51, 0x18, 0x27, 0x94, 0x7b, 0xa4, 0x88, 0x71, 0xab, 0xe6, 0x8c, 0x68, 
+	0xec, 0xc1, 0xbd, 0xec, 0x23, 0xd2, 0x47, 0xcf, 0x99, 0x10, 0x77, 0xc4, 0xd3, 0xe4, 0x23, 0x1b, 
+	0xb6, 0x26, 0xdf, 0x19, 0xde, 0xfc, 0x17, 0xf6, 0xf1, 0x02, 0x81, 0x81, 0x00, 0xec, 0x05, 0x9b, 
+	0xb3, 0x38, 0xc3, 0x14, 0xab, 0xc7, 0x02, 0xb6, 0xb5, 0x69, 0xb5, 0xf6, 0xe1, 0xce, 0x18, 0x3a, 
+	0x96, 0x31, 0x3a, 0xac, 0x60, 0x3f, 0x0c, 0x74, 0x4f, 0xf7, 0x62, 0xc3, 0x76, 0xfa, 0x87, 0x06, 
+	0x46, 0xca, 0x88, 0x36, 0xe7, 0xd3, 0xd3, 0x10, 0xd7, 0x0a, 0xdf, 0x71, 0x64, 0x90, 0xf2, 0x91, 
+	0xb3, 0xa9, 0xcb, 0x9b, 0xfb, 0x91, 0xff, 0x51, 0x89, 0xec, 0x88, 0x2d, 0xa6, 0x61, 0x82, 0xa4, 
+	0x57, 0xcb, 0xb6, 0x7b, 0x1b, 0x94, 0xdd, 0xdb, 0x90, 0x40, 0xac, 0xa7, 0xeb, 0xd5, 0xcc, 0xb6, 
+	0x47, 0xf8, 0xdf, 0x08, 0x77, 0xab, 0x86, 0xf8, 0x5a, 0x77, 0x6e, 0x2f, 0xdf, 0x57, 0xe7, 0x3d, 
+	0x51, 0x9c, 0x0a, 0x50, 0x71, 0xb2, 0xa4, 0x15, 0xc9, 0xe2, 0x9f, 0x3f, 0x5f, 0x90, 0x43, 0xdb, 
+	0x29, 0x18, 0x90, 0xbf, 0xbf, 0x9f, 0x37, 0xbc, 0x03, 0x1a, 0xd7, 0xe6, 0x39, 0x02, 0x81, 0x80, 
+	0x6f, 0xf1, 0x98, 0x5f, 0xe9, 0x37, 0xd9, 0xf3, 0x13, 0x99, 0x2c, 0xc6, 0x39, 0x36, 0x7b, 0x9f, 
+	0x72, 0x67, 0x4d, 0x63, 0xd9, 0x56, 0xfd, 0xff, 0x38, 0x22, 0x1c, 0xb9, 0x95, 0xa7, 0xc7, 0xcb, 
+	0x03, 0x96, 0xe3, 0x89, 0x1a, 0x3b, 0xbb, 0xc1, 0x96, 0x62, 0x6e, 0xc2, 0x8c, 0xe9, 0x6c, 0xc3, 
+	0xad, 0x2a, 0xdd, 0x47, 0xa4, 0x74, 0x0b, 0x86, 0xea, 0x82, 0xd5, 0xda, 0x8f, 0x49, 0x78, 0x41, 
+	0xf2, 0x48, 0x4a, 0x58, 0xc6, 0xc3, 0x0c, 0x59, 0xbe, 0x21, 0x70, 0x03, 0x26, 0xad, 0x5e, 0x58, 
+	0x29, 0x4e, 0xb2, 0xe2, 0xea, 0xbc, 0xfb, 0x8d, 0x10, 0xe4, 0xf0, 0x7d, 0x4a, 0xfd, 0xc7, 0x4f, 
+	0xa6, 0xa0, 0x44, 0xc4, 0x27, 0x4a, 0xa9, 0x3f, 0xdf, 0xbb, 0xee, 0x16, 0xb3, 0x5e, 0xe7, 0x44, 
+	0x0f, 0x81, 0x70, 0x12, 0x4c, 0x71, 0xb1, 0x5e, 0x91, 0x0c, 0xa2, 0x43, 0xc1, 0x68, 0x11, 0x61, 
+	0x02, 0x81, 0x80, 0x3e, 0x87, 0xc1, 0xd7, 0x7a, 0xbb, 0x5c, 0x77, 0xa2, 0x33, 0x1a, 0xda, 0xf7, 
+	0x55, 0xc9, 0x41, 0xcb, 0xcb, 0x69, 0x82, 0x2f, 0x2a, 0xbf, 0x4e, 0x84, 0x85, 0xb5, 0x2f, 0x16, 
+	0x78, 0xa9, 0x16, 0x95, 0x8b, 0x3e, 0x63, 0x74, 0xf7, 0x1f, 0xac, 0xcd, 0xd7, 0x06, 0x88, 0x22, 
+	0x8e, 0x4e, 0x49, 0x79, 0x89, 0x7a, 0x86, 0xa1, 0xfe, 0x9a, 0xa5, 0xcc, 0xe9, 0x5a, 0xdd, 0xf2, 
+	0xb7, 0xa5, 0x78, 0x86, 0x2f, 0x09, 0x81, 0x65, 0x2c, 0x44, 0x73, 0x6b, 0x3e, 0x58, 0x14, 0x60, 
+	0xbe, 0x1d, 0x83, 0x02, 0xd2, 0xc8, 0x9c, 0x4a, 0xd8, 0x34, 0x33, 0x18, 0x53, 0x9a, 0xea, 0xc4, 
+	0xe7, 0x81, 0x71, 0x67, 0xa5, 0x90, 0xfe, 0x55, 0x1b, 0xfa, 0x72, 0x15, 0x05, 0x19, 0xec, 0xb1, 
+	0xc8, 0xc5, 0x0e, 0x79, 0x77, 0x30, 0xd2, 0x33, 0x7a, 0xee, 0x02, 0x43, 0x99, 0x8d, 0x8b, 0x39, 
+	0x0a, 0x68, 0x29, 0x02, 0x81, 0x80, 0x65, 0xb9, 0xc0, 0x88, 0x26, 0xf1, 0xbf, 0xf0, 0x73, 0x75, 
+	0x85, 0x6b, 0x7d, 0x6c, 0x18, 0x70, 0x2d, 0x55, 0xc2, 0x59, 0x41, 0xef, 0x61, 0xe2, 0x93, 0x1c, 
+	0x04, 0x34, 0xa7, 0x18, 0xb3, 0x81, 0x6e, 0xfb, 0xf9, 0xd3, 0x50, 0x82, 0xce, 0x10, 0x93, 0x1e, 
+	0x98, 0xe4, 0xfb, 0x1c, 0x97, 0x6f, 0x66, 0xd9, 0x3d, 0x74, 0x43, 0xe2, 0xb0, 0x08, 0x71, 0x67, 
+	0xa1, 0xb0, 0xca, 0xab, 0x1c, 0x50, 0xd0, 0x9c, 0x11, 0xf1, 0x12, 0xa4, 0xd7, 0x5e, 0x20, 0xd0, 
+	0x8f, 0x75, 0x0d, 0xd8, 0x9f, 0xe3, 0xef, 0xef, 0xec, 0x1f, 0x16, 0xb1, 0x53, 0x5e, 0xad, 0xc5, 
+	0x2e, 0x9f, 0xcc, 0xea, 0x9b, 0x4a, 0x29, 0xe6, 0x96, 0x6a, 0x64, 0x18, 0x6e, 0x65, 0x0f, 0xf5, 
+	0x72, 0x95, 0xfe, 0xa0, 0xbb, 0xc3, 0x9e, 0xf8, 0x6b, 0x46, 0xe8, 0xdc, 0x9c, 0xf3, 0x84, 0x48, 
+	0x26, 0xa7, 0x82, 0xd0, 0x7d, 0x53
+};
+
+uint8_t DH_p[] = { 
+    0xd6, 0x27, 0x14, 0x7a, 0x7c, 0x0c, 0x26, 0x63, 0x9d, 0x82, 0xeb, 0x1f, 0x4a, 0x18, 0xff, 0x6c,
+    0x34, 0xad, 0xea, 0xa6, 0xc0, 0x23, 0xe6, 0x65, 0xfc, 0x8e, 0x32, 0xc3, 0x33, 0xf4, 0x91, 0xa7,
+    0xcc, 0x88, 0x58, 0xd7, 0xf3, 0xb3, 0x17, 0x5e, 0xb0, 0xa8, 0xeb, 0x5c, 0xd4, 0xd8, 0x3a, 0xae,
+    0x8e, 0x75, 0xa1, 0x50, 0x5f, 0x5d, 0x67, 0xc5, 0x40, 0xf4, 0xb3, 0x68, 0x35, 0xd1, 0x3a, 0x4c,
+    0x93, 0x7f, 0xca, 0xce, 0xdd, 0x83, 0x29, 0x01, 0xc8, 0x4b, 0x76, 0x81, 0x56, 0x34, 0x83, 0x31,
+    0x92, 0x72, 0x65, 0x7b, 0xac, 0xd9, 0xda, 0xa9, 0xd1, 0xd3, 0xe5, 0x77, 0x58, 0x6f, 0x5b, 0x44,
+    0x3e, 0xaf, 0x7f, 0x6d, 0xf5, 0xcf, 0x0a, 0x80, 0x0d, 0xa5, 0x56, 0x4f, 0x4b, 0x85, 0x41, 0x0f,
+    0x13, 0x41, 0x06, 0x1f, 0xf3, 0xd9, 0x65, 0x36, 0xae, 0x47, 0x41, 0x1f, 0x1f, 0xe0, 0xde, 0x69,
+    0xe5, 0x86, 0x2a, 0xa1, 0xf2, 0x48, 0x02, 0x92, 0x68, 0xa6, 0x37, 0x9f, 0x76, 0x4f, 0x7d, 0x94,
+    0x5d, 0x10, 0xe5, 0xab, 0x5d, 0xb2, 0xf3, 0x12, 0x8c, 0x79, 0x03, 0x92, 0xa6, 0x7f, 0x8a, 0x78,
+    0xb0, 0xba, 0xc5, 0xb5, 0x31, 0xc5, 0xc8, 0x22, 0x6e, 0x29, 0x02, 0x40, 0xab, 0xe7, 0x5c, 0x23,
+    0x33, 0x7f, 0xcb, 0x86, 0xc7, 0xb4, 0xfd, 0xaa, 0x44, 0xcd, 0x9c, 0x9f, 0xba, 0xac, 0x3a, 0xcf,
+    0x7e, 0x31, 0x5f, 0xa8, 0x47, 0xce, 0xca, 0x1c, 0xb4, 0x77, 0xa0, 0xec, 0x9a, 0x46, 0xd4, 0x79,
+    0x7b, 0x64, 0xbb, 0x6c, 0x91, 0xb2, 0x38, 0x01, 0x65, 0x11, 0x45, 0x9f, 0x62, 0x08, 0x6f, 0x31,
+    0xcf, 0xc4, 0xba, 0xdc, 0xd0, 0x03, 0x91, 0xf1, 0x18, 0x1f, 0xcb, 0x4d, 0xfc, 0x73, 0x5a, 0xa2,
+    0x15, 0xb8, 0x3c, 0x8d, 0x80, 0x92, 0x1c, 0xa1, 0x03, 0xd0, 0x83, 0x2f, 0x5f, 0xe3, 0x07, 0x69 
+};
+
+
+uint8_t DH_g[] = {
+    0x95, 0x7d, 0xd1, 0x49, 0x68, 0xc1, 0xa5, 0xf1, 0x48, 0xe6, 0x50, 0x4f, 0xa1, 0x10, 0x72, 0xc4,
+    0xef, 0x12, 0xec, 0x2d, 0x94, 0xbe, 0xc7, 0x20, 0x2c, 0x94, 0xf9, 0x68, 0x67, 0x0e, 0x22, 0x17,
+    0xb5, 0x5c, 0x0b, 0xca, 0xac, 0x9f, 0x25, 0x9c, 0xd2, 0xa6, 0x1a, 0x20, 0x10, 0x16, 0x6a, 0x42,
+    0x27, 0x83, 0x47, 0x42, 0xa0, 0x07, 0x52, 0x09, 0x33, 0x97, 0x4e, 0x30, 0x57, 0xd8, 0xb7, 0x1e,
+    0x46, 0xa6, 0xba, 0x4e, 0x40, 0x6a, 0xe9, 0x1a, 0x5a, 0xa0, 0x74, 0x56, 0x92, 0x55, 0xc2, 0xbd,
+    0x44, 0xcd, 0xb3, 0x33, 0xf7, 0x35, 0x46, 0x25, 0xdf, 0x84, 0x19, 0xf3, 0xe2, 0x7a, 0xac, 0x4e,
+    0xee, 0x1a, 0x86, 0x3b, 0xb3, 0x87, 0xa6, 0x66, 0xc1, 0x70, 0x21, 0x41, 0xd3, 0x58, 0x36, 0xb5,
+    0x3b, 0x6e, 0xa1, 0x55, 0x60, 0x9a, 0x59, 0xd3, 0x85, 0xd8, 0xdc, 0x6a, 0xff, 0x41, 0xb6, 0xbf,
+    0x42, 0xde, 0x64, 0x00, 0xd0, 0xee, 0x3a, 0xa1, 0x8a, 0xed, 0x12, 0xf9, 0xba, 0x54, 0x5c, 0xdb,
+    0x06, 0x24, 0x49, 0xe8, 0x47, 0xcf, 0x5b, 0xe4, 0xbb, 0xc0, 0xaa, 0x8a, 0x8c, 0xbe, 0x73, 0xd9,
+    0x02, 0xea, 0xee, 0x8d, 0x87, 0x5b, 0xbf, 0x78, 0x04, 0x41, 0x9e, 0xa8, 0x5c, 0x3c, 0x49, 0xde,
+    0x88, 0x6d, 0x62, 0x21, 0x7f, 0xf0, 0x5e, 0x2d, 0x1d, 0xfc, 0x47, 0x0d, 0x1b, 0xaa, 0x4e, 0x0d,
+    0x78, 0x20, 0xfe, 0x57, 0x0f, 0xca, 0xdf, 0xeb, 0x3c, 0x84, 0xa7, 0xe1, 0x61, 0xb2, 0x95, 0x98,
+    0x07, 0x73, 0x8e, 0x51, 0xc6, 0x87, 0xe4, 0xcf, 0xf1, 0x5f, 0x86, 0x99, 0xec, 0x8d, 0x44, 0x92,
+    0x2c, 0x99, 0xf6, 0xc0, 0xf4, 0x39, 0xe8, 0x05, 0xbf, 0xc1, 0x56, 0xde, 0xfe, 0x93, 0x75, 0x06,
+    0x69, 0x87, 0x83, 0x06, 0x51, 0x80, 0xa5, 0x6e, 0xa6, 0x19, 0x7d, 0x3b, 0xef, 0xfb, 0xe0, 0x4a
+};
+
+
+const uint8_t SAC_IV[] = {
+    0xf7, 0x70, 0xb0, 0x36, 0x03, 0x61, 0xf7, 0x96, 0x65, 0x74, 0x8a, 0x26, 0xea, 0x4e, 0x85, 0x41
+};
+
+X509 *getRootCert() {
+    const uint8_t *p = rootCert;
+	return d2i_X509(NULL, &p, sizeof(rootCert));
+}
+
+X509 *getCustomerCert() {
+    const uint8_t *p = customerCert;
+	return d2i_X509(NULL, &p, sizeof(customerCert));
+}
+
+X509 *getDeviceCert() {
+    const uint8_t *p = deviceCert;
+	return d2i_X509(NULL, &p, sizeof(deviceCert));
+}
+
+RSA *getRsaPrivateKey() {
+    const uint8_t *p = rsaPrivateKey;
+    return d2i_RSAPrivateKey(NULL, &p, sizeof(rsaPrivateKey));
+}
+
+uint8_t *getDH_p(size_t *length) {
+	*length = sizeof(DH_p);
+	return DH_p;
+}
+
+uint8_t *getDH_g(size_t *length) {
+	*length = sizeof(DH_g);
+	return DH_g;
+}
+
+const uint8_t *getSAC_IV(size_t *length) {
+	*length = sizeof(SAC_IV);
+	return SAC_IV;
+}
+
+void calcSacKeys(uint8_t *ks_host, uint8_t *sak, uint8_t *sek) {
+    AES_KEY key;
+    uint8_t dec[32];
+    uint8_t keydata[] = { 0xea, 0x74, 0xf4, 0x71, 0x99, 0xd7, 0x6f, 0x35, 0x89, 0xf0, 0xd1, 0xdf, 0x0f, 0xee, 0xe3, 0x00 };
+    int i;
+    
+    AES_set_encrypt_key(keydata, 128, &key);
+    
+    for (i = 0; i < 2; i++)
+        AES_ecb_encrypt(&ks_host[16 * i], &dec[16 * i], &key, 1);
+
+    for (i = 0; i < 16; i++)
+        sek[i] = ks_host[i] ^ dec[i];
+
+    for (i = 0; i < 16; i++)
+        sak[i] = ks_host[16 + i] ^ dec[16 + i];
+}
+
+void calcKeyMaterial(uint8_t *kp, uint8_t *km) {
+    AES_KEY aes_ctx;
+    uint8_t skey[]= { 0x3e, 0x20, 0x15, 0x84, 0x2c, 0x37, 0xce, 0xe3, 0xd6, 0x14, 0x57, 0x3e, 0x3a, 0xab, 0x91, 0xb6 };
+    unsigned int i;
+    
+    AES_set_encrypt_key(skey, 128, &aes_ctx);
+    for (i = 0; i < 32; i += 16)
+        AES_ecb_encrypt(&kp[i], &km[i], &aes_ctx, 1);
+
+    for (i = 0; i < 32; i++) {
+        km[i] ^= kp[i];
+    }
+}
+
--- /dev/null
+++ b/libciplusprivate/pciplus.h
@@ -0,0 +1,41 @@
+#ifndef PCIPLUS_H
+#define PCIPLUS_H
+
+#include <stddef.h>
+#include <stdint.h>
+#include <openssl/x509.h>
+#include <openssl/rsa.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+    X509 *getRootCert(void);
+    X509 *getCustomerCert(void);
+    X509 *getDeviceCert(void);
+    
+    RSA *getRsaPrivateKey(void);
+  
+    // DH_p[256]
+    uint8_t *getDH_p(size_t *length);
+    // DH_g[256]
+    uint8_t *getDH_g(size_t *length);
+    // SAC_IV[16]
+    const uint8_t *getSAC_IV(size_t *length);
+   
+    // Parameters:
+    // In:  ks_host[32]
+    // Out: sak[16]
+    //      sek[16]
+    void calcSacKeys(uint8_t *ks_host, uint8_t *sak, uint8_t *sek);
+    
+    // Parameters:
+    // In:  kp[32]
+    // Out: km[32]
+    void calcKeyMaterial(uint8_t *kp, uint8_t *km);    
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif /* PCIPLUS_H */
+
--- a/Makefile
+++ b/Makefile
@@ -25,7 +25,7 @@
 
 ### Make libciplusprivate
 
-#MAKE_CIPLUS_PRIVATE = 1
+MAKE_CIPLUS_PRIVATE = 1
 
 ifdef MAKE_CIPLUS_PRIVATE
 EXTRALIBDIRS += libciplusprivate
